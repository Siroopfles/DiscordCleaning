openapi: 3.0.0
info:
  title: Webhook API
  description: API for managing and delivering webhooks
  version: 1.0.0

servers:
  - url: /api
    description: Default server

components:
  schemas:
    Webhook:
      type: object
      required:
        - name
        - url
        - events
        - secret
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Display name for the webhook
        url:
          type: string
          format: uri
          description: The URL to send webhook events to
        events:
          type: array
          items:
            type: string
          description: List of event types to subscribe to
        secret:
          type: string
          description: Secret used for webhook signature
        enabled:
          type: boolean
          default: true
          description: Whether the webhook is active
        headers:
          type: object
          additionalProperties:
            type: string
          description: Custom headers to include in webhook requests
        retryCount:
          type: integer
          minimum: 0
          maximum: 10
          default: 3
          description: Maximum number of retry attempts
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true

    WebhookDelivery:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        webhookId:
          type: string
          format: uuid
          readOnly: true
        event:
          type: string
          description: Event type that triggered the webhook
        payload:
          type: object
          description: Event payload
        status:
          type: string
          enum: [pending, success, failed]
          description: Delivery status
        statusCode:
          type: integer
          description: HTTP status code from webhook endpoint
        responseBody:
          type: string
          description: Response body from webhook endpoint
        error:
          type: string
          description: Error message if delivery failed
        retryCount:
          type: integer
          description: Number of retry attempts made
        nextRetry:
          type: string
          format: date-time
          description: Scheduled time for next retry
        duration:
          type: number
          format: float
          description: Request duration in seconds
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /webhooks:
    get:
      summary: List webhooks
      description: Returns a list of configured webhooks
      security:
        - BearerAuth: []
      parameters:
        - name: event
          in: query
          schema:
            type: string
          description: Filter webhooks by event type
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      summary: Register webhook
      description: Creates a new webhook configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
      responses:
        '201':
          description: Webhook created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /webhooks/{webhookId}:
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get webhook
      description: Returns details of a specific webhook
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Webhook details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/NotFound'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      summary: Update webhook
      description: Updates a webhook configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
      responses:
        '200':
          description: Webhook updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/NotFound'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete webhook
      description: Deletes a webhook configuration
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Webhook deleted
        '401':
          $ref: '#/components/responses/NotFound'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /webhooks/{webhookId}/deliveries:
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: List webhook deliveries
      description: Returns delivery history for a webhook
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of webhook deliveries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookDelivery'
        '401':
          $ref: '#/components/responses/NotFound'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /webhooks/{webhookId}/test:
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Test webhook
      description: Sends a test event to the webhook
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '202':
          description: Test event accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDelivery'
        '401':
          $ref: '#/components/responses/NotFound'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/ServerError'